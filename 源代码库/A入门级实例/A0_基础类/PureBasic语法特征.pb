;***********************************
;迷路仟整理 2015.07.27
;PureBasic语法特征
;***********************************

;************* 编号和句柄 ************* 
;任何对象,都可以用[编号]和[句柄], 
;[编号]是程序级的,不支持跨进程识别,即程序私有的
;[句柄]是系统级的,支持跨进程识别,即系统共享的
;可以通过[编号]获取[句柄],如 控件句柄 = GadgetID(控件编号), 
;当通过第三方如DLL或API获取的对象时,只有[句柄],没有[编号]
;也就是说,对象一定有[句柄],但不一定有[编号]
;
;在帮助文件中,#开头的表示对象[编号](常量除外),ID结束的表示对象[句柄]
;GadgetID = GadgetID(#Gadget)
;为了编辑代码方法,一般采用Gadget/GadgetID来表示编号,用hGadget来表示句柄
;即以ID结束,或加对象前辍来表示编号,用h开头来表示句柄.
;因为#Gadget是常量,在实际操作过程中,常量是不能赋值的,
;如: #Gadget = TextGadget(#Pb_Any, 000,000,100,020,"") 这样是不合法的.
;    GadgetID = TextGadget(#Pb_Any, 000,000,100,020,"") 这样是合法的.


;************* 函数特征 ************* 
;以下划线"_"结束的函数,默认是系统API函数,
;如果你不知道某个API函数,PuerBasic是否内置了,你可以在编辑器上输出这个API函数加下划线,
;如果看到帮助提示,说明这个API已经被PuerBasic收录,注意,绝大部分的API,已经被收录了.
;如: 
;CopyMemory()表示PuerBasic自带的函数,跨平台
;CopyMemory_()表示Window系统中API函数,不跨平台

;************* 函数命名 ************* 
;【Create】 : 以Create开头的,为创建类命令
;【Read】   : 以Read开头的,为只读类命令
;【Write】  : 以Write开头的,为擦写类命令
;【Open】   : 以Open开头的,为打开类命令,支持读写
;【Save】   : 以Save开头的,为保存类命令
;【Catch】  : 以Catch开头的,为从内存中抓取数据
;【Free】   : 以Free开头的,为释放类命令
;【Init】   : 以Init开头的,为初始化类命令
;【Delete】 : 以Delete开头的,为删除类命令
;【Remove】 : 以Remove开头的,也是删除子成员类命令,仅用于控件
;【Clear】  : 以Remove开头的,是清空类命令,但用于清空子成员
;【Resize】 : 以Resize开头的,是调整大小命令, 主要用于控件/窗体
;【Set】    : 以Set开头的,是设置类命令
;【Get】    : 以Get开头的,是获取类命令
;【Use】    : 以Use开头的,是启用类命令,主要用于启用插件类的命令
;【Stop】   : 以Stop开头的,表示停止退出
;【Pause】  : 以Pause开头的,表示暂停
;【Resume】 : 以Resume开头的,表示恢复/继续
;【Is】     : 以Is开头的,表示判断
;【Close】  : 以Close开头的,表示关闭/退出
;【Event】  : 以Event开头的,表示事件
;【New】    : 以New开头的,表示新建
;【Examine】: 以Examine开头的,表示枚举功能

;************* 函数命名 ************* 
;【_】      : 以_结束的,表示API函数
;【ID】     : 以ID结束的,表示获取对象句柄
;【N】      : 以大写N结束的,表示有换行功能
;【Decoder】: 以Decoder结束的,表示解码器
;【Encoder】: 以Encoder结束的,表示编码器

;是不是瞬间学会PureBasic


 
; IDE Options = PureBasic 5.62 (Windows - x86)
; CursorPosition = 52
; FirstLine = 32
; EnableXP